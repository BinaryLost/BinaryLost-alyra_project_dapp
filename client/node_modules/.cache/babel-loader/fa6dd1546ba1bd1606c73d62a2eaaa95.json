{"ast":null,"code":"var _jsxFileName = \"/home/hag/www/alyra/projet3_dapp/client/src/components/Voters/Voters.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport './Voters.css';\nimport StyledButton from \"../Buttons/StyledButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Voters() {\n  _s();\n\n  const {\n    state: {\n      contract,\n      accounts\n    }\n  } = useEth();\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputGetVoterChange = e => {\n    if (/^\\d+$|^$/.test(e.target.value)) {\n      setInputValue(e.target.value);\n    }\n  };\n\n  const getVoter = async () => {\n    const value = await contract.methods.getVoter().call({\n      from: accounts[0]\n    });\n    setInputValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"les \\xE9lecteurs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nous sommes transparents. A tout moment vous pouvez visualisez le vote d'un autre \\xE9lecteur. Il vous faudra l'adresse publique du wallet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: getVoter,\n      className: \"input-btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"uint\",\n        value: inputValue,\n        onChange: handleInputGetVoterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        text: \"Visualiser un \\xE9lecteur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Voters, \"dVXafgoheI+NXdHwSHoxne0bn+U=\", false, function () {\n  return [useEth];\n});\n\n_c = Voters;\nexport default Voters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Voters\");","map":{"version":3,"names":["useState","useEth","StyledButton","Voters","state","contract","accounts","inputValue","setInputValue","handleInputGetVoterChange","e","test","target","value","getVoter","methods","call","from"],"sources":["/home/hag/www/alyra/projet3_dapp/client/src/components/Voters/Voters.jsx"],"sourcesContent":["import {useState} from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport './Voters.css'\nimport StyledButton from \"../Buttons/StyledButton\";\n\nfunction Voters() {\n    const { state: { contract, accounts } } = useEth();\n    const [inputValue,setInputValue] = useState('');\n\n    const handleInputGetVoterChange = e => {\n        if (/^\\d+$|^$/.test(e.target.value)) {\n            setInputValue(e.target.value);\n        }\n    };\n\n    const getVoter = async () => {\n        const value = await contract.methods.getVoter().call({ from: accounts[0] });\n        setInputValue(value);\n    };\n\n\n    return (\n        <>\n            <h2>les électeurs</h2>\n            <p>Nous sommes transparents. A tout moment vous pouvez visualisez le vote d'un autre électeur. Il vous faudra l'adresse publique\n            du wallet.</p>\n            <div onClick={getVoter} className=\"input-btn\">\n                <input\n                type=\"text\"\n                placeholder=\"uint\"\n                value={inputValue}\n                onChange={handleInputGetVoterChange}\n            />\n            <StyledButton text=\"Visualiser un électeur\" />\n            </div>\n        </>\n    )\n}\n\nexport default Voters;\n"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAO,cAAP;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EACd,MAAM;IAAEC,KAAK,EAAE;MAAEC,QAAF;MAAYC;IAAZ;EAAT,IAAoCL,MAAM,EAAhD;EACA,MAAM,CAACM,UAAD,EAAYC,aAAZ,IAA6BR,QAAQ,CAAC,EAAD,CAA3C;;EAEA,MAAMS,yBAAyB,GAAGC,CAAC,IAAI;IACnC,IAAI,WAAWC,IAAX,CAAgBD,CAAC,CAACE,MAAF,CAASC,KAAzB,CAAJ,EAAqC;MACjCL,aAAa,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAb;IACH;EACJ,CAJD;;EAMA,MAAMC,QAAQ,GAAG,YAAY;IACzB,MAAMD,KAAK,GAAG,MAAMR,QAAQ,CAACU,OAAT,CAAiBD,QAAjB,GAA4BE,IAA5B,CAAiC;MAAEC,IAAI,EAAEX,QAAQ,CAAC,CAAD;IAAhB,CAAjC,CAApB;IACAE,aAAa,CAACK,KAAD,CAAb;EACH,CAHD;;EAMA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAII;MAAK,OAAO,EAAEC,QAAd;MAAwB,SAAS,EAAC,WAAlC;MAAA,wBACI;QACA,IAAI,EAAC,MADL;QAEA,WAAW,EAAC,MAFZ;QAGA,KAAK,EAAEP,UAHP;QAIA,QAAQ,EAAEE;MAJV;QAAA;QAAA;QAAA;MAAA,QADJ,eAOA,QAAC,YAAD;QAAc,IAAI,EAAC;MAAnB;QAAA;QAAA;QAAA;MAAA,QAPA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADJ;AAgBH;;GAhCQN,M;UACqCF,M;;;KADrCE,M;AAkCT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}
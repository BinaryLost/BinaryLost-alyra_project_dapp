{"ast":null,"code":"import _regeneratorRuntime from\"/home/hag/www/alyra/vote_dapp/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/hag/www/alyra/vote_dapp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/home/hag/www/alyra/vote_dapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/hag/www/alyra/vote_dapp/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/hag/www/alyra/vote_dapp/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/hag/www/alyra/vote_dapp/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from\"react\";import SimpleStorageContract from\"./contracts/SimpleStorage.json\";import getWeb3 from\"./getWeb3\";import Address from\"./Address.js\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={storageValue:0,web3:null,accounts:null,contract:null,addresses:null};_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var web3,accounts,networkId,deployedNetwork,instance,options,options1,listAddress,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getWeb3();case 3:web3=_context.sent;_context.next=6;return web3.eth.getAccounts();case 6:accounts=_context.sent;_context.next=9;return web3.eth.net.getId();case 9:networkId=_context.sent;deployedNetwork=SimpleStorageContract.networks[networkId];instance=new web3.eth.Contract(SimpleStorageContract.abi,deployedNetwork&&deployedNetwork.address);options={fromBlock:0,//Number || \"earliest\" || \"pending\" || \"latest\"\ntoBlock:'latest'};options1={fromBlock:0//Number || \"earliest\" || \"pending\" || \"latest\"\n};_context.next=16;return instance.getPastEvents('dataStored',options);case 16:listAddress=_context.sent;instance.events.dataStored(options1).on('data',function(event){return listAddress.push(event);});_context.next=20;return instance.methods.get().call();case 20:response=_context.sent;// Set web3, accounts, and contract to the state, and then proceed with an\n// example of interacting with the contract's methods.\n_this.setState({storageValue:response,web3:web3,accounts:accounts,contract:instance,addresses:listAddress});_context.next=28;break;case 24:_context.prev=24;_context.t0=_context[\"catch\"](0);// Catch any errors for any of the above operations.\nalert(\"Failed to load web3, accounts, or contract. Check console for details.\");console.error(_context.t0);case 28:case\"end\":return _context.stop();}}},_callee,null,[[0,24]]);}));_this.runSet=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _this$state,accounts,contract,valeur,transac,response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_this$state=_this.state,accounts=_this$state.accounts,contract=_this$state.contract;valeur=document.getElementById(\"valeur\").value;_context2.next=4;return contract.methods.set(valeur).send({from:accounts[0]});case 4:transac=_context2.sent;_context2.next=7;return contract.methods.get().call();case 7:response=_context2.sent;console.log(\"l'adresse est celle ci: \"+transac.events.dataStored.returnValues.addr);console.log(\"la data est celle ci: \"+transac.events.dataStored.returnValues.data);console.log(transac);_this.setState({storageValue:response});case 12:case\"end\":return _context2.stop();}}},_callee2);}));return _this;}_createClass(App,[{key:\"render\",value:function render(){if(!this.state.web3){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading Web3, accounts, and contract...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Address,{addr:this.state.accounts}),\"        \",/*#__PURE__*/_jsx(\"h1\",{children:\"Good to Go!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your Truffle Box is installed and ready.\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Smart Contract Example\"}),/*#__PURE__*/_jsxs(\"div\",{children:[\"The stored value is: \",this.state.storageValue]}),/*#__PURE__*/_jsx(\"p\",{children:\"Try changing the value by setting it via the input:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"valeur\"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.runSet,children:\"Set the value you wrote inside the blockchain\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:\"Here is the addresses that interacted with the contract, and the value they put\"}),/*#__PURE__*/_jsx(\"table\",{children:this.state.addresses.map(function(addresse){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:addresse.returnValues.addr}),/*#__PURE__*/_jsx(\"td\",{children:addresse.returnValues.data})]});})})]});}}]);return App;}(Component);export default App;","map":{"version":3,"names":["React","Component","SimpleStorageContract","getWeb3","Address","App","state","storageValue","web3","accounts","contract","addresses","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","options","fromBlock","toBlock","options1","getPastEvents","listAddress","events","dataStored","on","event","push","methods","get","call","response","setState","alert","console","error","runSet","valeur","document","getElementById","value","set","send","from","transac","log","returnValues","addr","data","map","addresse"],"sources":["/home/hag/www/alyra/vote_dapp/client/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Address from \"./Address.js\";\n\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { storageValue: 0, web3: null, accounts: null, contract: null, addresses: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      let options = {\n        fromBlock: 0,                  //Number || \"earliest\" || \"pending\" || \"latest\"\n        toBlock: 'latest'\n      };\n\n      let options1 = {\n        fromBlock: 0,                  //Number || \"earliest\" || \"pending\" || \"latest\"\n      };\n\n      let listAddress = await instance.getPastEvents('dataStored', options);\n\n      instance.events.dataStored(options1)\n\t\t\t\t\t\t  .on('data', event => listAddress.push(event));\n      const response = await instance.methods.get().call();\n\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ storageValue: response, web3, accounts, contract: instance, addresses:listAddress });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  runSet = async () => {\n    const { accounts, contract} = this.state;\n    let valeur=document.getElementById(\"valeur\").value;\n    const transac = await contract.methods.set(valeur).send({ from: accounts[0] });\n    const response = await contract.methods.get().call();\n\n\n    console.log(\"l'adresse est celle ci: \" + transac.events.dataStored.returnValues.addr);\n    console.log(\"la data est celle ci: \" + transac.events.dataStored.returnValues.data);\n    console.log(transac);\n\n    this.setState({ storageValue: response });\n    };\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <Address addr={this.state.accounts} />        <h1>Good to Go!</h1>\n        <p>Your Truffle Box is installed and ready.</p>\n        <h2>Smart Contract Example</h2>\n        <div>The stored value is: {this.state.storageValue}</div>\n        <p>\n          Try changing the value by setting it via the input:\n        </p>\n        <input type=\"text\" id=\"valeur\" />\n        <button onClick={this.runSet}>Set the value you wrote inside the blockchain</button>\n        <br />\n        <p>Here is the addresses that interacted with the contract, and the value they put</p>\n        <table>\n        {this.state.addresses.map((addresse) => (\n          <tr><td>{addresse.returnValues.addr}</td><td>{addresse.returnValues.data}</td></tr>\n        ))}\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
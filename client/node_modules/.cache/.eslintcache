[{"/home/hag/www/alyra/projet3_dapp/client/src/index.js":"1","/home/hag/www/alyra/projet3_dapp/client/src/App.jsx":"2","/home/hag/www/alyra/projet3_dapp/client/src/contexts/EthContext/index.js":"3","/home/hag/www/alyra/projet3_dapp/client/src/contexts/EthContext/EthContext.js":"4","/home/hag/www/alyra/projet3_dapp/client/src/contexts/EthContext/useEth.js":"5","/home/hag/www/alyra/projet3_dapp/client/src/contexts/EthContext/state.js":"6","/home/hag/www/alyra/projet3_dapp/client/src/contexts/EthContext/EthProvider.jsx":"7","/home/hag/www/alyra/projet3_dapp/client/src/components/Footer.jsx":"8","/home/hag/www/alyra/projet3_dapp/client/src/components/Setup.jsx":"9","/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/index.jsx":"10","/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/Cta.jsx":"11","/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/Contract.jsx":"12","/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/Desc.jsx":"13","/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/ContractBtns.jsx":"14","/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/NoticeWrongNetwork.jsx":"15","/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/NoticeNoArtifact.jsx":"16","/home/hag/www/alyra/projet3_dapp/client/src/components/Buttons/StyledButton.jsx":"17","/home/hag/www/alyra/projet3_dapp/client/src/components/Intro/Title.jsx":"18","/home/hag/www/alyra/projet3_dapp/client/src/components/Intro/Presentation.jsx":"19","/home/hag/www/alyra/projet3_dapp/client/src/components/Intro/Banner.jsx":"20","/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/Title.jsx":"21","/home/hag/www/alyra/projet3_dapp/client/src/components/Steps/Steps.jsx":"22","/home/hag/www/alyra/projet3_dapp/client/src/components/Voters/Voters.jsx":"23","/home/hag/www/alyra/projet3_dapp/client/src/Main.jsx":"24","/home/hag/www/alyra/projet3_dapp/client/src/components/NoticeWrongNetwork.jsx":"25","/home/hag/www/alyra/projet3_dapp/client/src/components/NoticeNoArtifact.jsx":"26"},{"size":297,"mtime":1657891662080,"results":"27","hashOfConfig":"28"},{"size":301,"mtime":1657988851371,"results":"29","hashOfConfig":"28"},{"size":181,"mtime":1657872410026,"results":"30","hashOfConfig":"28"},{"size":104,"mtime":1657872410026,"results":"31","hashOfConfig":"28"},{"size":145,"mtime":1657872410026,"results":"32","hashOfConfig":"28"},{"size":424,"mtime":1657872410026,"results":"33","hashOfConfig":"28"},{"size":1713,"mtime":1657916677391,"results":"34","hashOfConfig":"28"},{"size":330,"mtime":1657890807398,"results":"35","hashOfConfig":"28"},{"size":1113,"mtime":1657877996480,"results":"36","hashOfConfig":"28"},{"size":873,"mtime":1657877996480,"results":"37","hashOfConfig":"28"},{"size":212,"mtime":1657877996480,"results":"38","hashOfConfig":"28"},{"size":723,"mtime":1657877996480,"results":"39","hashOfConfig":"28"},{"size":515,"mtime":1657877996480,"results":"40","hashOfConfig":"28"},{"size":1166,"mtime":1657877996480,"results":"41","hashOfConfig":"28"},{"size":190,"mtime":1657877996480,"results":"42","hashOfConfig":"28"},{"size":273,"mtime":1657877996480,"results":"43","hashOfConfig":"28"},{"size":215,"mtime":1657921554099,"results":"44","hashOfConfig":"28"},{"size":80,"mtime":1657891400261,"results":"45","hashOfConfig":"28"},{"size":214,"mtime":1657889488064,"results":"46","hashOfConfig":"28"},{"size":558,"mtime":1657916222840,"results":"47","hashOfConfig":"28"},{"size":80,"mtime":1657877996480,"results":"48","hashOfConfig":"28"},{"size":1265,"mtime":1657981603136,"results":"49","hashOfConfig":"28"},{"size":4134,"mtime":1657987347225,"results":"50","hashOfConfig":"28"},{"size":770,"mtime":1657989045558,"results":"51","hashOfConfig":"28"},{"size":190,"mtime":1657877996480,"results":"52","hashOfConfig":"28"},{"size":273,"mtime":1657877996480,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1qysy31",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hag/www/alyra/projet3_dapp/client/src/index.js",[],["112","113"],"/home/hag/www/alyra/projet3_dapp/client/src/App.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/contexts/EthContext/index.js",[],"/home/hag/www/alyra/projet3_dapp/client/src/contexts/EthContext/EthContext.js",[],"/home/hag/www/alyra/projet3_dapp/client/src/contexts/EthContext/useEth.js",[],"/home/hag/www/alyra/projet3_dapp/client/src/contexts/EthContext/state.js",[],"/home/hag/www/alyra/projet3_dapp/client/src/contexts/EthContext/EthProvider.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Footer.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Setup.jsx",[],["114","115"],"/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/index.jsx",[],["116","117"],"/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/Cta.jsx",[],["118","119"],"/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/Contract.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/Desc.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/ContractBtns.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/NoticeWrongNetwork.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/NoticeNoArtifact.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Buttons/StyledButton.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Intro/Title.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Intro/Presentation.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Intro/Banner.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Demo/Title.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/Steps/Steps.jsx",["120","121"],"import {useState} from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport './Steps.css'\n\nfunction Steps() {\n    const { state } = useEth();\n    const [contractAddress,setContractAddress] = useState(null);\n    const [currentStep,setCurrentStep] = useState(null);\n\n    const getContractData = async () => {\n        try {\n            setContractAddress(await state.artifact.networks[state.networkID].address);\n        }catch (error){\n        }\n    }\n    getContractData();\n\n    return (\n        <>\n            <h2>Le déroulement du vote</h2>\n            <h3></h3>\n\n            <p><span className=\"bold\">Adresse du contrat : </span><span id=\"address-container\">{ contractAddress }</span> </p>\n            <p>\n                Le propriétaire du contrat ouvrira la session des propositions après avoir ajouté les électeurs.\n                Une fois la sessions des propositions closes, l'ouverture de la session de vote aura lieu.\n                la proposition ayant récolté le plus de votes sera retenue.\n            </p>\n            <ul>\n                <li>Etape précédente:</li>\n                <li>Etape actuelle: {currentStep}</li>\n                <li>Etape suivante:</li>\n            </ul>\n\n        </>\n    )\n}\n\nexport default Steps;\n","/home/hag/www/alyra/projet3_dapp/client/src/components/Voters/Voters.jsx",["122"],"import {useRef, useEffect, useState} from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport './Voters.css'\nimport StyledButton from \"../Buttons/StyledButton\";\n\nfunction Voters() {\n\n    const voterEle = useRef(null);\n\n    const { state: { contract, accounts } } = useEth();\n    const [inputValue,setInputValue] = useState('');\n    const [inputAddValue,setInputAddValue] = useState('');\n    const [voterAddress,setVoterAddress] = useState('');\n    const [voterHasVoted,setVoterHasVoted] = useState(false);\n    const [voterProposalVotedId,setVoterProposalVotedId] = useState(0);\n    const [voterIsRegistered,setVoterIsRegistered] = useState(false);\n    const [addresses,setAddresses] = useState([]);\n\n\n    useEffect(() => {\n        voterEle.current.classList.add(\"flash\");\n        const flash = setTimeout(() => {\n            voterEle.current.classList.remove(\"flash\");\n        }, 300);\n        return () => {\n            clearTimeout(flash);\n        };\n    }, [voterAddress,voterHasVoted,voterProposalVotedId,voterIsRegistered]);\n\n    const handleInputGetVoterChange = e => {\n        setInputValue(e.target.value);\n    };\n\n    const handleInputAddVoterChange = e => {\n        setInputAddValue(e.target.value);\n    };\n\n    const getVoter = async () => {\n        const value = await contract.methods.getVoter(inputValue).call({ from: accounts[0] })\n        setVoterAddress(inputValue);\n        setVoterHasVoted(value.hasVoted);\n        setVoterIsRegistered(value.isRegistered);\n        setVoterProposalVotedId(value.votedProposalId);\n    };\n\n    const addVoter = async () => {\n        try{\n            const transac = await contract.methods.addVoter(inputAddValue).send({ from: accounts[0] });\n            getVoter(inputAddValue)\n            console.log(\"l'adresse est celle ci: \" + transac.events.dataStored.returnValues.addr);\n            console.log(\"la data est celle ci: \" + transac.events.dataStored.returnValues.data);\n            console.log(transac.message);\n        }catch(error){\n            console.log(error.message);\n        }\n    };\n\n    return (\n        <>\n            <h2>les électeurs</h2>\n            <p>Nous sommes transparents. A tout moment vous pouvez visualiser le vote d'un autre électeur. Il vous faudra l'adresse publique\n            du wallet.</p>\n\n            <h3>Liste des électeurs</h3>\n            <div>\n                {addresses.map((address) => (\n                    <tr><td>{address.returnValues.addr}</td></tr>\n                ))}\n            </div>\n\n            <h3>Détail d'un électeur</h3>\n            <div className=\"section-block\">\n                <div>\n                    <input\n                    type=\"text\"\n                    placeholder=\"address, ex: 0xdf.......\"\n                    value={inputValue}\n                    onChange={handleInputGetVoterChange}\n                    />\n                    <StyledButton click={getVoter} text=\"Visualiser un électeur\" />\n                </div>\n                <div id=\"voter-container\" ref={voterEle}>\n                    {voterAddress.length > 0 &&\n                        <>\n                        Electeur: <strong>{voterAddress}</strong>\n                        <br/>\n                        Enregistré: <strong>{voterIsRegistered ? \"oui\" : \"non\"}</strong>\n                        <br/>\n                        A voté: <strong>{voterHasVoted ? \"oui\" : \"non\"}</strong>\n                        <br/>\n                        Proposition votée: <strong>{voterProposalVotedId}</strong>\n                        </>\n                    }\n            </div>\n            </div>\n            <h3>Ajouter un électeur</h3>\n            <p>Attention, seul le propriétaire peut ajouter un électeur</p>\n            <div  className=\"section-block\">\n                <input\n                    type=\"text\"\n                    placeholder=\"address, ex: 0xdf.......\"\n                    value={inputAddValue}\n                    onChange={handleInputAddVoterChange}\n                />\n                <StyledButton click={addVoter} text=\"Ajouter un électeur\" />\n            </div>\n        </>\n    )\n}\n\nexport default Voters;\n","/home/hag/www/alyra/projet3_dapp/client/src/Main.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/NoticeWrongNetwork.jsx",[],"/home/hag/www/alyra/projet3_dapp/client/src/components/NoticeNoArtifact.jsx",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"123","replacedBy":"129"},{"ruleId":"125","replacedBy":"130"},{"ruleId":"123","replacedBy":"131"},{"ruleId":"125","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":8,"column":24,"nodeType":"135","messageId":"136","endLine":8,"endColumn":38},{"ruleId":"137","severity":1,"message":"138","line":21,"column":13,"nodeType":"139","endLine":21,"endColumn":17},{"ruleId":"133","severity":1,"message":"140","line":17,"column":22,"nodeType":"135","messageId":"136","endLine":17,"endColumn":34},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],["141"],["142"],["141"],["142"],["141"],["142"],"no-unused-vars","'setCurrentStep' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'setAddresses' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/NoticeNoArtifact.jsx","components/NoticeWrongNetwork.jsx","components/Intro/Title.jsx","assets/logo.png","assets/banner.png","components/Intro/Banner.jsx","components/Footer.jsx","components/Buttons/StyledButton.jsx","components/Voters/Voters.jsx","components/Steps/Steps.jsx","components/Notification/Notification.jsx","components/ContractAddress/ContractAddress.jsx","components/Proposals/Proposals.jsx","components/Votes/Votes.jsx","components/Tally/Tally.jsx","components/Winner/Winner.jsx","Main.jsx","App.jsx","fonts/Reactor_Sans_Regular.ttf","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","console","error","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","NoticeNoArtifact","NoticeWrongNetwork","Title","Banner","id","className","src","logo","alt","bannerImage","Link","uri","text","href","target","rel","Footer","StyledButton","props","click","onClick","Voters","voterAddresses","setVoterAddresses","owner","currentStep","setNotification","voterEle","useRef","useState","inputAddValue","setInputAddValue","voterAddress","setVoterAddress","voterHasVoted","setVoterHasVoted","voterProposalVotedId","setVoterProposalVotedId","voterIsRegistered","setVoterIsRegistered","current","classList","add","flash","setTimeout","remove","clearTimeout","logAdresses","options","fromBlock","to","getPastEvents","then","r","toArray","k","returnValues","listAddresses","getVoter","voterRequested","innerText","includes","preventDefault","methods","call","from","hasVoted","isRegistered","parseInt","votedProposalId","addVoter","send","transac","VoterRegistered","eventChange","message","length","ref","map","ad","placeholder","onChange","Steps","setCurrentStep","workflowStatusArray","workflowNextStepMappingMethods","goNextStep","nextStep","WorkflowStatusChange","newStatus","Notification","notificationBarEl","notification","active","ContractAddress","contractAddress","setContractAddress","getContractData","_address","Proposals","proposals","setProposals","inputAddProposalValue","setInputAddProposalValue","logProposals","addProposal","ProposalRegistered","proposalId","getOneProposal","push","description","log","pro","Votes","inputAddVoteValue","setInputAddVoteValue","setHasVoted","setVotedProposalId","addVote","setVote","Voted","Tally","tallyVote","tallyVotes","Winner","winningProposalId","setWinningProposalId","winningProposalDescription","setWinningProposalDescription","winner","winningProposalID","Main","setOwner","getCurrentStep","workflowStatus","loadOwner","main","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e1ddd797.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","function NoticeNoArtifact() {\n  return (\n    <p>\n      ⚠️Connectez vous à Metamask pour continuer.\n    </p>\n  );\n}\n\nexport default NoticeNoArtifact;\n","function NoticeWrongNetwork() {\n  return (\n    <p>\n      ⚠️ MetaMask is not connected to the same network as the one you deployed to.\n    </p>\n  );\n}\n\nexport default NoticeWrongNetwork;\n","function Title() {\n    return <h1>VOTES INTERNES</h1>;\n}\n\nexport default Title;\n","export default __webpack_public_path__ + \"static/media/logo.bfe9f4b5.png\";","export default __webpack_public_path__ + \"static/media/banner.35db5814.png\";","import Title from \"./Title\";\nimport logo from '../../assets/logo.png'\nimport bannerImage from '../../assets/banner.png'\nimport './Banner.css'\n\nfunction Banner() {\n    return (\n        <div>\n            <div id=\"banner-container\" className=\"sub-container\">\n                <div id='voting-banner'>\n                    <img src={logo} alt='logo' id='voting-logo' />\n                    <Title />\n                </div>\n            </div>\n            <img src={bannerImage} alt='Banner' id='voting-banner-image' />\n        </div>\n    )\n}\n\nexport default Banner","import './Footer.css';\n\nfunction Link({ uri, text }) {\n  return <a href={uri} target=\"_blank\" rel=\"noreferrer\">{text}</a>;\n}\n\nfunction Footer() {\n  return (\n    <footer className=\"sub-container\">\n      <h2>Autres ressources</h2>\n      <Link uri={\"https://alyra.fr\"} text={\"Alyra\"} />\n    </footer >\n  );\n}\n\nexport default Footer;\n","import './StyleButton.css'\nfunction StyledButton(props) {\n  if(props.click){\n    return <button onClick={props.click}>{props.text}</button>\n  }\n  return <button>{props.text}</button>\n}\n\nexport default StyledButton;\n","import {useRef, useEffect, useState} from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport './Voters.css'\nimport StyledButton from \"../Buttons/StyledButton\";\n\nfunction Voters({voterAddresses, setVoterAddresses, owner,currentStep, setNotification }) {\n\n    const voterEle = useRef(null);\n\n    const { state: { contract, accounts } } = useEth();\n    const [inputAddValue,setInputAddValue] = useState('');\n    const [voterAddress,setVoterAddress] = useState('');\n    const [voterHasVoted,setVoterHasVoted] = useState(false);\n    const [voterProposalVotedId,setVoterProposalVotedId] = useState(0);\n    const [voterIsRegistered,setVoterIsRegistered] = useState(false);\n\n\n    useEffect(() => {\n        voterEle.current.classList.add(\"flash\");\n        const flash = setTimeout(() => {\n            voterEle.current.classList.remove(\"flash\");\n        }, 300);\n        return () => {\n            clearTimeout(flash);\n        };\n    }, [voterAddress,voterHasVoted,voterProposalVotedId,voterIsRegistered]);\n\n    useEffect(() => {\n        logAdresses();\n    }, []);\n\n\n    const logAdresses = async () => {\n        let options = {\n            fromBlock: '0',\n            to: 'latest'\n        };\n        const listAddresses = await contract.getPastEvents('VoterRegistered', options).then(\n            (r)=>{\n                let toArray = [];\n                for (const k in r){\n                    toArray[k] = r[k].returnValues[0];\n                }\n                setVoterAddresses(toArray);\n            }\n        );\n        return listAddresses;\n    };\n\n    const handleInputAddVoterChange = e => {\n        setInputAddValue(e.target.value);\n    };\n\n    const getVoter = async (e) => {\n        const voterRequested = e.target.innerText;\n        if(!voterAddresses.includes(accounts[0])){\n            e.preventDefault();\n            setNotification(accounts[0] + ' Vous devez être électeur pour voir les détails du compte ' +  voterRequested);\n        }\n        const value = await contract.methods.getVoter(voterRequested).call({ from: accounts[0] })\n        setVoterAddress(voterRequested);\n        setVoterHasVoted(value.hasVoted);\n        setVoterIsRegistered(value.isRegistered);\n        if(value.hasVoted){\n            setVoterProposalVotedId(parseInt(value.votedProposalId)+1);\n        }\n    };\n\n    const addVoter = async () => {\n        try{\n            const transac = await contract.methods.addVoter(inputAddValue).send({ from: accounts[0] });\n            const eventChange = await transac.events.VoterRegistered.returnValues.voterAddress;\n            setNotification(`L'électeur ${eventChange} a bien été ajouté à la liste`);\n            logAdresses();\n        }catch(error){\n            console.error(error.message);\n        }\n    };\n\n    return (\n        <div className=\"component-section\">\n            <h2>les électeurs</h2>\n            <br/>\n            <p>Nous sommes transparents. En tant qu'électeur, à tout moment vous pouvez visualiser le vote d'un autre électeur.</p>\n            { voterAddresses.length > 0 &&\n                <>\n                <br/>\n                <h3>Liste des électeurs</h3>\n                <p className='bold'>Cliquez sur un électeur pour voir les détails</p>\n            </>\n            }\n            <div className=\"section-block\">\n                <div id=\"voter-container\" ref={voterEle}>\n                    {voterAddress.length > 0 &&\n                        <>\n                            Electeur: <strong>{voterAddress}</strong>\n                            <br/>\n                            Enregistré: <strong>{voterIsRegistered ? \"oui\" : \"non\"}</strong>\n                            <br/>\n                            A voté: <strong>{voterHasVoted ? \"oui\" : \"non\"}</strong>\n                            <br/>\n                            Proposition votée: <strong>{voterProposalVotedId}</strong>\n                        </>\n                    }\n                </div>\n            </div>\n            {voterAddresses.length === 0 &&\n                <>\n                <div className=\"bold\">\n                    Aucun électeur n'a été enregistré\n                </div>\n                <br />\n                </>\n            }\n            {voterAddresses.length > 0 &&\n                <div className=\"list-voters-container\">\n                    {voterAddresses.map((ad) => (\n                        <div onClick={getVoter} className=\"list-voters\" key={ad}>{ad}</div>\n                    ))}\n                    <br/>\n                </div>\n            }\n            { parseInt(currentStep)  === 0 && accounts[0] === owner &&\n             <div id='add-votet-container'>\n                <h3>Ajouter un électeur</h3>\n\n                <p>Attention, seul le propriétaire peut ajouter un électeur</p>\n\n                <div  className=\"section-block\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"address, ex: 0xdf.......\"\n                        value={inputAddValue}\n                        onChange={handleInputAddVoterChange}\n                    />\n                    <StyledButton click={addVoter} text=\"Ajouter un électeur\" />\n                </div>\n             </div>\n            }\n        </div>\n    )\n}\n\nexport default Voters;\n","import './Steps.css'\nimport StyledButton from \"../Buttons/StyledButton\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction Steps({owner, setCurrentStep, currentStep, workflowStatusArray, setNotification}) {\n\n    const {state: {contract, accounts}} = useEth();\n    const workflowNextStepMappingMethods = {\n        1: 'startProposalsRegistering',\n        2: 'endProposalsRegistering',\n        3: 'startVotingSession',\n        4: 'endVotingSession',\n        5: 'tallyVotes'\n    }\n\n    const goNextStep = async () => {\n        try {\n            const nextStep = parseInt(currentStep) + 1;\n            const transac = await contract.methods[workflowNextStepMappingMethods[nextStep]]().send({from: accounts[0]});\n            await transac.events.WorkflowStatusChange.returnValues.newStatus;\n            setNotification(workflowStatusArray[nextStep]);\n            setCurrentStep(nextStep);\n        } catch (error) {\n        }\n    }\n\n    return (\n        <div className=\"component-section\">\n            {parseInt(currentStep) < 4  &&\n                <>\n                    <h2>Le déroulement du vote</h2>\n                    <br/>\n                    <h3 className=\"bold\" id=\"current-step\">{workflowStatusArray[currentStep]}</h3>\n                    <br/>\n                    <p>\n                        Le propriétaire du contrat ouvrira la session des propositions après avoir ajouté les électeurs.\n                        Une fois la sessions des propositions closes, l'ouverture de la session de vote aura lieu.\n                        la proposition ayant récolté le plus de votes sera retenue.\n                    </p>\n\n                    {owner === accounts[0] &&\n                        <StyledButton click={goNextStep} text=\"Terminer l'étape actuelle\"/>\n                    }\n                </>}\n            {parseInt(currentStep) >= 4 &&\n                <>\n                    <h3 className=\"bold\" id=\"current-step\">{workflowStatusArray[currentStep]}</h3>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default Steps;\n","import \"./Notification.css\"\nimport {useEffect, useRef} from \"react\";\n\nfunction Notification(props) {\n\n  const notificationBarEl = useRef(null);\n\n  useEffect(()=>{\n    {props.notification !== \"\"  &&\n      notificationBarEl.current.classList.add(\"active\");\n      const active = setTimeout(() => {\n        notificationBarEl.current.classList.remove(\"active\");\n      }, 5000);\n      return () => {\n        clearTimeout(active);\n      };\n    }\n  },[props.notification]);\n\n  return (\n    <div id='notification' ref={notificationBarEl}>\n        {props.notification}\n    </div>\n  );\n}\n\nexport default Notification;\n","import \"./ContractAddress.css\"\nimport {useEffect, useState} from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction ContractAddress() {\n    const [contractAddress, setContractAddress] = useState(null);\n    const {state: {contract, accounts}} = useEth();\n\n    useEffect(() => {\n        getContractData();\n    }, [contractAddress])\n\n    const getContractData = async () => {\n        try {\n            setContractAddress(contract._address)\n        } catch (error) {\n        }\n    }\n    return (\n        <div className=\"sub-container\">\n            <div><span className=\"contract-address-reminder bold\">L'adresse du contrat est : </span>\n                <a href={\"https://ropsten.etherscan.io/address/\" + contractAddress}>\n                    <span className=\"contract-address\">{contractAddress}</span>\n                </a>\n            </div>\n            <div><span className=\"contract-address-reminder bold\">Vous êtes connecté sur l'adresse : </span>\n                <a href={\"https://ropsten.etherscan.io/address/\" + accounts[0]}>\n                    <span className=\"contract-address\">{accounts[0]}</span>\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default ContractAddress;\n","import {useState,useEffect} from \"react\";\nimport './Proposals.css'\nimport StyledButton from \"../Buttons/StyledButton\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction Proposals({proposals,setProposals,setNotification, currentStep,voterAddresses}) {\n    const {state: {contract, accounts}} = useEth();\n    const [inputAddProposalValue,setInputAddProposalValue] = useState('');\n\n    useEffect(()=> {\n        logProposals();\n    },[])\n\n    const handleInputAddProposalChange = e => {\n        setInputAddProposalValue(e.target.value);\n    };\n\n    const addProposal = async () => {\n        try{\n            const transac = await contract.methods.addProposal(inputAddProposalValue).send({ from: accounts[0] });\n            const eventChange = await transac.events.ProposalRegistered.returnValues.proposalId;\n            setNotification(`La proposition ${eventChange} a bien été ajoutée à la liste`);\n            logProposals();\n        }catch(error){\n            console.error(error.message);\n        }\n    };\n\n\n    const logProposals = async () => {\n        let options = {\n            fromBlock: '0',\n            to: 'latest'\n        };\n        try{\n            const listProposals = await contract.getPastEvents('ProposalRegistered', options).then(\n                async (r) => {\n                    let toArray = [];\n                    for (const k in r) {\n                        let id = r[k].returnValues[0];\n                        await contract.methods.getOneProposal(id).call({from: accounts[0]}).then((r)=>{\n                            toArray.push({id: id, description: r.description});\n                        });\n                    }\n                    setProposals(toArray);\n                }\n        );\n        }catch (error) {\n            console.log(error);\n        }\n    };\n\n\n    return (\n        <>\n            {parseInt(currentStep) > 0 && voterAddresses.includes(accounts[0]) &&\n                <div className=\"component-section\">\n                    <h2>Les propositions</h2>\n                        <div id='add-proposal-container'>\n                            <div className=\"list-voters-container\">\n                                {proposals.map((pro) => (\n                                    <div key={pro.id} className=\"list-proposals\">\n                                        Proposition {parseInt(pro.id)  + 1} : {pro.description}\n                                    </div>\n                                ))}\n                                <br/>\n                            </div>\n\n                            {parseInt(currentStep) === 1 &&\n                                <>\n                                <h3>Ajouter une proposition</h3>\n\n                                <div  className=\"section-block\">\n                                <input\n                                type=\"text\"\n                                placeholder=\"Description\"\n                                onChange={handleInputAddProposalChange}\n                                value={inputAddProposalValue}\n                                />\n                                <StyledButton click={addProposal} text=\"Ajouter une proposition\" />\n                                </div>\n                                </>\n                            }\n                        </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Proposals;\n","import {useEffect, useState} from \"react\";\nimport './Votes.css'\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport StyledButton from \"../Buttons/StyledButton\";\n\nfunction Votes({voterAddresses, currentStep, setNotification}) {\n    const {state: {contract, accounts}} = useEth();\n    const [inputAddVoteValue, setInputAddVoteValue] = useState('');\n    const [hasVoted, setHasVoted] = useState(false);\n    const [votedProposalId, setVotedProposalId] = useState(-1);\n\n    const handleInputVoteChange = e => {\n        setInputAddVoteValue(e.target.value);\n    };\n\n    const getVoter = async (e) => {\n        const value = await contract.methods.getVoter(accounts[0]).call({from: accounts[0]});\n        setHasVoted(value.hasVoted);\n        setVotedProposalId(value.votedProposalId);\n    }\n\n    const addVote = async () => {\n        try {\n            const transac = await contract.methods.setVote(parseInt(inputAddVoteValue) - 1).send({from: accounts[0]});\n            const eventChange = await transac.events.Voted.returnValues.proposalId;\n            setNotification(`Votre vote pour la proposition ${parseInt(eventChange) + 1} a bien été pris en compte`);\n            setHasVoted(true);\n        } catch (error) {\n            console.error(error.message);\n        }\n    };\n    getVoter();\n    return (\n        <>\n            {\n                parseInt(currentStep) === 3 &&\n                voterAddresses.includes(accounts[0]) &&\n\n                <div className=\"component-section\">\n                    {!hasVoted &&\n                        <>\n                            <h2>Il est l'heure de voter</h2>\n                            <br/>\n                            <p>Entrez le numéro de la proposition et validez pour enregistrer le vote</p>\n                            <div className=\"section-block\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Numéro de la proposition: exemple: 1 \"\n                                    onChange={handleInputVoteChange}\n                                    value={inputAddVoteValue}\n                                />\n                                <StyledButton click={addVote} text=\"Votez pour votre proposition\"/>\n                            </div>\n                        </>}\n                    {hasVoted &&\n                        <>\n                            <h2>Votre vote est pris en compte</h2>\n                            <h3 id=\"vote-reminder\">Vous avez voté pour la proposition {parseInt(votedProposalId)+1}</h3>\n                            <br/>\n                            <p>Les votes seront comptabilisées lorsque l'administrateur fera le nécessaire</p>\n                        </>\n                    }\n                </div>\n            }\n        </>\n\n    )\n}\n\nexport default Votes;\n","import './Tally.css'\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport StyledButton from \"../Buttons/StyledButton\";\n\nfunction Tally({ owner, setCurrentStep, currentStep, setNotification} ) {\n    const {state: {contract, accounts}} = useEth();\n\n    const tallyVote = async (e) => {\n        if(accounts[0] !== owner){\n            return;\n        }\n        try {\n            const nextStep = parseInt(currentStep) + 1;\n            await contract.methods.tallyVotes().send({ from: accounts[0] }).then((r) => {\n                setCurrentStep(nextStep);\n                setNotification(`Les votes sont comptabilisés, passage à la dernière étape`);\n            });\n        } catch (error) {\n            console.error(error.message);\n        }\n    };\n\n    return (\n        <>\n            {owner === accounts[0] &&\n                <div className=\"section-block\">\n                    <StyledButton click={tallyVote} text=\"Lancez la comptabilisation des votes\"/>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Tally;\n","import {useState} from \"react\";\nimport './Winner.css'\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction Winner({owner}) {\n    const {state: {contract}} = useEth();\n    const [winningProposalId, setWinningProposalId] = useState();\n    const [winningProposalDescription, setWinningProposalDescription] = useState();\n\n    const winner = async (e) => {\n        try{\n            await contract.methods.winningProposalID().call({from: owner})\n                .then(\n                    (r) => {\n                        setWinningProposalId(r);\n                    }\n                )\n                .then(()=>{\n                    contract.methods.getOneProposal(winningProposalId).call({ from: owner }).then(\n                        r => setWinningProposalDescription(r.description)\n                    )\n                })\n        }catch (err){\n        }\n    };\n\n    winner();\n\n    return (\n        <div className=\"section-block\">\n            <p id=\"winner-is\">\n                Winner is : {parseInt(winningProposalId) + 1} : {winningProposalDescription}\n            </p>\n        </div>\n    )\n}\n\nexport default Winner;\n","import {useState} from \"react\";\nimport useEth from \"./contexts/EthContext/useEth\";\nimport NoticeNoArtifact from \"./components/NoticeNoArtifact\";\nimport NoticeWrongNetwork from \"./components/NoticeWrongNetwork\";\nimport Banner from \"./components/Intro/Banner\";\nimport Footer from \"./components/Footer\";\nimport Voters from \"./components/Voters/Voters\";\nimport Steps from \"./components/Steps/Steps\";\nimport Notification from \"./components/Notification/Notification\";\nimport ContractAddress from \"./components/ContractAddress/ContractAddress\";\nimport Proposals from \"./components/Proposals/Proposals\";\nimport Votes from \"./components/Votes/Votes\";\nimport Tally from \"./components/Tally/Tally\";\nimport Winner from \"./components/Winner/Winner\";\n\nfunction Main() {\n    const [owner, setOwner] = useState(\"\");\n    const {state: {contract, accounts}} = useEth();\n    const {state} = useEth();\n    const [notification, setNotification] = useState('');\n    const [voterAddresses, setVoterAddresses] = useState([]);\n    const [proposals, setProposals] = useState([]);\n\n    const workflowStatusArray = [\n        'Etape d\\'enregistrement des électeurs ouverte',\n        'Etape des propositions ouverte',\n        'Etape des propositions terminée',\n        'Etape des votes ouverte',\n        'Etape des votes terminée, les votes vont êtres comptabilisés',\n        'La session de vote test terminée, voici les résultats'\n    ];\n    const [currentStep, setCurrentStep] = useState(null);\n\n    const getCurrentStep = async () => {\n        try {\n            await contract.methods.workflowStatus().call({from: accounts[0]}).then(\n                (r) => {\n                    setCurrentStep(r);\n                }\n            );\n        } catch (error) {\n        }\n    }\n\n    const loadOwner = async () => {\n        try {\n            await contract.methods.owner().call({from: accounts[0]}).then(\n                (r) => {\n                    setOwner(r);\n                }\n            );\n        } catch (error) {\n        }\n    }\n\n    getCurrentStep();\n    loadOwner();\n    const main =\n        <>\n            <ContractAddress/>\n            <Steps owner={owner} workflowStatusArray={workflowStatusArray} currentStep={currentStep}\n                   setCurrentStep={setCurrentStep}\n                   setNotification={setNotification} />\n            {parseInt(currentStep) < 4 &&\n                <>\n                    <Voters voterAddresses={voterAddresses} setVoterAddresses={setVoterAddresses} owner={owner}\n                            workflowStatusArray={workflowStatusArray} currentStep={currentStep}\n                            setNotification={setNotification}/>\n                    <Proposals proposals={proposals} setProposals={setProposals} currentStep={currentStep}\n                               voterAddresses={voterAddresses} setNotification={setNotification}/>\n                    <Votes currentStep={currentStep} voterAddresses={voterAddresses} setNotification={setNotification}/>\n                </>\n            }\n            {parseInt(currentStep) === 4 &&\n                <Tally owner={owner} setCurrentStep={setCurrentStep} currentStep={currentStep}  setNotification={setNotification} />\n            }\n            {parseInt(currentStep) === 5 &&\n                <Winner owner={owner} />\n            }\n        </>;\n\n    return (\n        <div className=\"main\">\n            <Notification notification={notification}/>\n            <Banner/>\n            {\n                !state.artifact ? <NoticeNoArtifact/> :\n                    !state.contract ? <NoticeWrongNetwork/> :\n                        main\n            }\n            <Footer/>\n        </div>\n    );\n}\n\nexport default Main;\n","import { EthProvider } from \"./contexts/EthContext\";\nimport \"./App.css\";\nimport Main from \"./Main\";\n\nfunction App() {\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n        <div className=\"container\">\n            <Main />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/Reactor_Sans_Regular.4f2f5c2f.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport './fonts/Reactor_Sans_Regular.ttf';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}